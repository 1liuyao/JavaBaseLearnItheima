package com.itheima_02;
/*
    测试类

    成员内部类的定义位置：在类中方法，跟【成员变量】是一个位置

    外界创建成员内部类格式【此时内部类未被private修饰】
    【不推荐，因为将类定义在内部就是不想被外界直接访问到】
    格式：外部类名.内部类名 对象名 = 外部类对象.内部类对象;
    举例：Outer.Inner oi = new Outer().new Inner();

    成员内部类的推荐使用方案
    将一个类，设计为内部类的目的，大多数都是不想让外界去访问，所以内部类的定义应该私有化，
    私有化之后，再提供一个可以让外界调用的方法，方法内部创建内部类对象并调用。

    问题：成员内部类可以使用哪些修饰符呢？
    回答：成员变量可以使用的，成员内部类就可以使用
        （1）访问权限：private，默认，protected，public
        （2）可以被final修饰
        （3）可以被static修饰：①出现访问局限性：只能访问外部类的静态成员
                            ②如果成员内部类中定义了静态成员，则该内部类只能是静态的
                            ③外部类静态方法访问成员内部类，内部类也必须是静态的

    问题：为什么成员内部类可以直接访问外部类的成员？
    回答：是因为内部类中都持有外部类的一个引用，即外部类名.this
 */
public class InnerDemo {
    public static void main(String[] args) {
        //创建内部类对象，并调用方法
//        Inner i = new Inner();//报错，内部类放在外部类中，不能直接访问

//        Outer.Inner oi = new Outer().new Inner();//此调用方式，适用于内部类未被private修饰
//        oi.show();

        Outer o = new Outer();
        o.method();

    }
}
